import React, { useMemo } from 'react';import classes from './tickets.module.scss';import TicketsFilters from '../TicketsFilters';import TicketsList from '../TicketsList';import { useAppSelector } from '../hooks/redux';import { AsideFilterItems } from '../aside/types';import { ITicket } from '../models/Tickets';const Tickets = () => {  const allTickets = useAppSelector((state) => state.Tickets.tickets);  const currentSwitch = useAppSelector((state) => state.AsideFilter);  const filtredTickets = useMemo<ITicket[]>(() => {    const res: ITicket[] = [];    allTickets.forEach((filterEl) => {      const switchValue = Math.max(filterEl.segments[0].stops.length, filterEl.segments[1].stops.length);      if (switchValue === 0 && currentSwitch.currentFilters.includes(AsideFilterItems.NullTranstion)) {        res.push(filterEl);      }      if (switchValue === 1 && currentSwitch.currentFilters.includes(AsideFilterItems.OneTransition)) {        res.push(filterEl);      }      if (switchValue === 2 && currentSwitch.currentFilters.includes(AsideFilterItems.SecondTransition)) {        res.push(filterEl);      }      if (switchValue === 3 && currentSwitch.currentFilters.includes(AsideFilterItems.ThreeTransition)) {        res.push(filterEl);      }    });    return res;  }, [allTickets, currentSwitch]);  return (    <div className={classes.tickets}>      <TicketsFilters />      <TicketsList ticketItemsFiltred={filtredTickets} />    </div>  );};export default Tickets;